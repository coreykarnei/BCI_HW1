function [jobList, failedPipeID] = find_failed_jobs(rootDir, pipeID)
% FIND_FAILED_JOBS - Find meegpipe jobs that did not complete
%
% 
%   [jobList, failedPipeID] = find_failed_jobs(rootDir [, pipeID])
%
% 
% Where
%
%   ROOTDIR is the root directory where the .meegpipe dirs generated by the
%   various meegpipe jobs can be found.
%
%   PIPEID is the ID of the relevant pipeline. The pipeline ID has the
%   format [pipeName]-[pipeHashCode]_[username]_[OS]-[matlabVer]. PIPEID is 
%   interpreted as a regular expression.
%
%   JOBLIST is a cell array with the names of the failed jobs, or an empty
%   cell array if all jobs where completed.
%
%   FAILEDPIPEID is a cell array with the ID of the pipeline that failed to
%   process the corresponding job in JOBLIST.
%
%
% See also: misc

if nargin < 2, pipeID = '.+'; end
if nargin < 1, rootDir = pwd; end


jobList = misc.dir(rootDir, '.meegpipe$', false);
failed  = false(size(jobList));
failedPipeID  = cell(size(jobList));

for i = 1:numel(jobList)
    thisDir = mperl.file.spec.catdir(rootDir, jobList{i});
    pipeNames = misc.dir(thisDir, '^[^.].{3,}');
    for j = 1:numel(pipeNames)
        if isempty(regexp(pipeNames{j}, pipeID, 'once')), continue; end
        directoryFile = mperl.file.spec.catfile(...
            thisDir, pipeNames{j}, 'directory.htm');
        if ~exist(directoryFile, 'file'),
            failed(i) = true;
            failedPipeID{i} = pipeNames{j};
            % If one of the relevant pipelines failed, then this is a
            % failed job
            break;
        end
    end
end

jobList = jobList(failed);
failedPipeID = failedPipeID(failed);


end