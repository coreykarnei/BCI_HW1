function obj = add_source_activation(obj, index, activation)
% ADD_SOURCE_ACTIVATION - Adds temporal activation to an EEG source
%
% obj = add_source_activation(obj, index, activation)
%
% where
%
% OBJ is a head.mri object
%
% INDEX is the index of the source whose temporal activation we want to
% modify. Alternatively, INDEX can also be a string with the name of the 
% relevant source
%
% ACTIVATION is the time-course of the source activation
%
%
% See also: head.mri

% Description: Adds temporal activation to an EEG source
% Documentation: class_head_mri.txt
NotEnoughInputArguments = MException('head:mri:add_source_activation', ...
    'Not enough input arguments: 3 are expected');

InvalidIndex = MException('head:mri:add_source_activation', ...
    'Invalid source index');

if nargin < 3 || isempty(index) || isempty(activation),
    throw(NotEnoughInputArguments);
end

if ischar(index),
    index = source_index(obj, index);
elseif ~isnumeric(index) || numel(index) > 1,    
    throw(InvalidIndex);
end

nbDipoles = numel(obj.Source(index).pnt);

if iscell(activation),
    % In case the data has been generated by a dynamics.data object
    activation = cell2mat(activation);
end

if size(activation, 1) == 1 && nbDipoles > 1,
   warning('head:mri:add_source_activation:MissingActivations', ...
       ['There are %d dipoles in source %d but only one activation' ...       
       'time series was provided\n' ...
       'Using same activation for all dipoles'], nbDipoles, index); 
   obj.Source(index).activation = repmat(activation, nbDipoles, 1);
end

obj.Source(index).activation = activation;



    
end