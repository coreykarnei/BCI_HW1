function ep_rejoinChunks(inFileName, outFileName, outputFormat, chunkNum)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ep_rejoinChunks(inFileName, outFileName, outputFormat, chunkNum) - rejoins file chunks into a full session file%%	Reads in file chunks generated by chunkInputFile function and writes them out%	as a reconstituted session file of the desired type.%%Inputs%	inFileName: filename (not including the .mat suffix or chunk number.  e.g., "NT5-01") and sourcepath.%	outFileName: Output filesname and sourcepath.  No suffix.%   outputFormat: The file format for the written out file.%	chunkNum: Number of chunks for subject%%	Inputs file chunks for each subject.%%Outputs%	Saves reconstituted session file.%% History:%% by Joseph Dien (8/00)% jdien07@mac.com%% modified 5/26/02 JD% output set to always be bigendian no matter what computer is running this code.%% bugfix 11/24/02 JD% closes output file when done.%% modified 5/27/03 JD% Renamed rejoinEGISchunks for greater clarity.%% bugfix 4/1/04 JD% Allow for spaces in file names.%% bugfix 3/22/07 JD% Eliminated warnings about rounding to 16 bits.%% modified 2/17/08 JD% Eliminated file type option for OS 9 macs as obsolete.%% modified (9/9/08) JD% Automatically sets File Type and Creator Type if on an OS X Mac%% modified (11/20/08) JD% Automatically sets montage type if on an OS X Mac.% Modified to accept chunks generated by chunkInputFile and thus a wider range of file formats.%% modified and bugfix (1/31/09) JD% allows for data with multiple events per trial but only one at stimulus onset.%% modified 3/14/09 JD% Changed to use EP format data to provide more flexibility with I/O functions.% and changed name to rejoinChunks.%% modified 6/22/09 JD% Added bad data fields from preprocessing.%% modified 9/22/09 JD% Modified to handle continuous files.%% bugfix 10/31/09 JD% Crash for non-continuous data files.  Thanks to Tim Curran.%% bugfix 11/2/09 JD% Crash for non-continuous data files that do not contain analysis fields when there is more than one chunk.%% modified 2/11/10 JD% analysis fields no longer optional.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     Copyright (C) 1999-2010  Joseph Dien%%     This program is free software: you can redistribute it and/or modify%     it under the terms of the GNU General Public License as published by%     the Free Software Foundation, either version 3 of the License, or%     (at your option) any later version.%%     This program is distributed in the hope that it will be useful,%     but WITHOUT ANY WARRANTY; without even the implied warranty of%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the%     GNU General Public License for more details.%%     You should have received a copy of the GNU General Public License%     along with this program.  If not, see <http://www.gnu.org/licenses/>.for chunk = 1:chunkNum    eval(['load ''' inFileName '-' num2str(chunk) '.mat''']);        if chunk == 1        data=dataChunk;    else        if strcmp('continuous',data.dataType)            numChunkTrials=length(dataChunk.timeNames);            data.data(:,end+1:end+numChunkTrials,:,:)=dataChunk.data;            data.timeNames(end+1:end+numChunkTrials)=dataChunk.timeNames;        else            numChunkTrials=length(dataChunk.cellNames);            data.data(:,:,end+1:end+numChunkTrials,:)=dataChunk.data;            data.cellNames(end+1:end+numChunkTrials)=dataChunk.cellNames;            data.trialNames(end+1:end+numChunkTrials)=dataChunk.trialNames;            data.trialSpecs(end+1:end+numChunkTrials,:)=dataChunk.trialSpecs;            data.events(:,end+1:end+numChunkTrials)=dataChunk.events;            data.analysis.badChans(1,end+1:end+numChunkTrials,:)=dataChunk.analysis.badChans;            data.analysis.badTrials(end+1:end+numChunkTrials)=dataChunk.analysis.badTrials;            data.analysis.blinkTrial(end+1:end+numChunkTrials)=dataChunk.analysis.blinkTrial;            data.analysis.moveTrial(end+1:end+numChunkTrials)=dataChunk.analysis.moveTrial;        end;            end;end;[err]=ep_writeData(data,outFileName,outputFormat);